- name: install PyMysQl and cryptography
  ansible.builtin.pip:
    name:
    - PyMysQl
    - cryptography
    executable: pip3.9
- name: Disable node js
  ansible.builtin.command: dnf module disable nodejs -y
- name: enable node js
  ansible.builtin.command: dnf module enable nodejs:20 -y
- name: install node js and mysql
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql
- name: Add user Expense
  ansible.builtin.user:
    name: expense
- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory
- name: download the backend code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip
- name: extract the code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes #by default ansible thinks this is in ansible server
- name: install dependencies
  ansible.builtin.command: npm install
  args:
    chdir: /app
- name: copy backend service # copy only works for files without variables
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service
- name: import mysql data
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ login_password }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    name: all
    state: import
- name: daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true
    name: backend
    state: restarted
- name: start and enable backend
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes